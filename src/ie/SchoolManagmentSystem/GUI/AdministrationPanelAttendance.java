/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ie.SchoolManagmentSystem.GUI;

import java.awt.CardLayout;
import java.awt.LayoutManager;
import java.awt.FlowLayout;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import ie.SchoolManagmentSystem.Attendance;
import java.awt.event.KeyEvent;

/**
 * AdministrationPanelAttendance.java
 * @author D. Whelan
 * JPANEL for viewing attendance details 
 */
public class AdministrationPanelAttendance extends javax.swing.JPanel {
    
        Attendance att[];
        int count = 0;

    /**
     * Creates new form AdministrationPanelAttendance
     */
    public AdministrationPanelAttendance() {
        initComponents();
        
        btnFinishEdit.setVisible(false);
    
        att = new Attendance[100];
        count = 0; 
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAttendance = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblStudent = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lblYear = new javax.swing.JLabel();
        lblClass = new javax.swing.JLabel();
        txtStudent2 = new javax.swing.JTextField();
        txtStudent5 = new javax.swing.JTextField();
        txtStudent6 = new javax.swing.JTextField();
        txtStudent4 = new javax.swing.JTextField();
        txtStudent3 = new javax.swing.JTextField();
        txtClass = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        txtStudent1 = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        lblYear1 = new javax.swing.JLabel();
        btnDisplay = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnFinishEdit = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setLayout(null);

        lblAttendance.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblAttendance.setForeground(new java.awt.Color(204, 204, 204));
        lblAttendance.setText("Attendance");
        add(lblAttendance);
        lblAttendance.setBounds(180, 30, 164, 29);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        btnBack.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBackKeyPressed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(100, 580, 100, 28);

        lblStudent.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStudent.setForeground(new java.awt.Color(204, 204, 204));
        lblStudent.setText("Students");
        add(lblStudent);
        lblStudent.setBounds(218, 230, 70, 17);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        btnSave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSaveKeyPressed(evt);
            }
        });
        add(btnSave);
        btnSave.setBounds(300, 580, 100, 28);

        lblYear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblYear.setForeground(new java.awt.Color(204, 204, 204));
        lblYear.setText("Date");
        add(lblYear);
        lblYear.setBounds(230, 70, 34, 14);

        lblClass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblClass.setForeground(new java.awt.Color(204, 204, 204));
        lblClass.setText("Class");
        add(lblClass);
        lblClass.setBounds(230, 170, 40, 17);
        add(txtStudent2);
        txtStudent2.setBounds(175, 285, 150, 25);
        add(txtStudent5);
        txtStudent5.setBounds(175, 390, 150, 25);
        add(txtStudent6);
        txtStudent6.setBounds(175, 425, 150, 25);
        add(txtStudent4);
        txtStudent4.setBounds(175, 355, 150, 25);
        add(txtStudent3);
        txtStudent3.setBounds(175, 320, 150, 25);
        add(txtClass);
        txtClass.setBounds(175, 190, 150, 25);
        add(txtDate);
        txtDate.setBounds(175, 90, 150, 25);
        add(txtStudent1);
        txtStudent1.setBounds(175, 250, 150, 25);
        add(txtYear);
        txtYear.setBounds(175, 140, 150, 25);

        lblYear1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblYear1.setForeground(new java.awt.Color(204, 204, 204));
        lblYear1.setText("Year");
        add(lblYear1);
        lblYear1.setBounds(230, 120, 34, 14);

        btnDisplay.setText("Display");
        btnDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayActionPerformed(evt);
            }
        });
        btnDisplay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnDisplayKeyPressed(evt);
            }
        });
        add(btnDisplay);
        btnDisplay.setBounds(350, 520, 100, 28);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        btnSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSearchKeyPressed(evt);
            }
        });
        add(btnSearch);
        btnSearch.setBounds(200, 520, 100, 28);

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        btnRemove.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRemoveKeyPressed(evt);
            }
        });
        add(btnRemove);
        btnRemove.setBounds(50, 520, 100, 28);

        btnFinishEdit.setText("Finish Edit");
        btnFinishEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishEditActionPerformed(evt);
            }
        });
        btnFinishEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnFinishEditKeyPressed(evt);
            }
        });
        add(btnFinishEdit);
        btnFinishEdit.setBounds(200, 470, 100, 28);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ie/SchoolManagmentSystem/GUI/ExamsAppBackground.png"))); // NOI18N
        add(lblBackground);
        lblBackground.setBounds(0, 0, 500, 700);
    }// </editor-fold>//GEN-END:initComponents

//MouseClick-Back     
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
    //Navigates to Admin     
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout)layout;
            cl.show(getParent(), "ADMIN");
        }
    }//GEN-LAST:event_btnBackActionPerformed

//MouseClick-Add     
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
    //Adds new attendance to array      
        String date, year, sClass, student1, student2, student3, student4, student5, student6;
        Attendance a;
        //If all text fields are empty
        if(txtDate.getText().isEmpty() && txtYear.getText().isEmpty() && txtClass.getText().isEmpty() && txtStudent1.getText().isEmpty() && txtStudent2.getText().isEmpty() && txtStudent3.getText().isEmpty() && txtStudent4.getText().isEmpty() && txtStudent5.getText().isEmpty() && txtStudent6.getText().isEmpty()) {           
            JOptionPane.showMessageDialog(null, "You have not entered any information", "Attention!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        //If fields are part filled
        else if(txtDate.getText().isEmpty() || txtYear.getText().isEmpty() || txtClass.getText().isEmpty()) {
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
            txtStudent1.setText("");
            txtStudent2.setText("");
            txtStudent3.setText("");
            txtStudent4.setText("");
            txtStudent5.setText("");
            txtStudent6.setText("");
            JOptionPane.showMessageDialog(null, "You need enter at least the Date, Year and Class for attendance to be recorded", "Attention!", JOptionPane.WARNING_MESSAGE);
            return;
        } 
        //If date,class and year are entered but no students
        else if((txtDate.getText().length() > 0) && (txtYear.getText().length() > 0) && (txtClass.getText().length() > 0) && txtStudent1.getText().isEmpty() && txtStudent2.getText().isEmpty() && txtStudent3.getText().isEmpty() && txtStudent4.getText().isEmpty() && txtStudent5.getText().isEmpty() && txtStudent6.getText().isEmpty()) {
            int reply = JOptionPane.showConfirmDialog(null, "Are you sure? your have not entered any students, this will recored the attendance as 0", "Are you Sure?", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {
                    JOptionPane.showMessageDialog(null, "Successfully added attendance to database.", "Congratulations  !", JOptionPane.WARNING_MESSAGE);
                    //Sets text from fields to array
                    date = txtDate.getText();
                    year = txtYear.getText();
                    sClass = txtClass.getText();
                    student1 = txtStudent1.getText();
                    student2 = txtStudent2.getText();
                    student3 = txtStudent3.getText();
                    student4 = txtStudent4.getText();
                    student5 = txtStudent5.getText();
                    student6 = txtStudent6.getText();

                    a = new Attendance (date, sClass, year, student1, student2, student3, student4, student5, student6);


                    count++;

                    txtDate.setText("");
                    txtClass.setText("");
                    txtYear.setText("");
                    return;
                }
                if (reply == JOptionPane.NO_OPTION) {
                    txtDate.setText("");
                    txtClass.setText("");
                    txtYear.setText("");
                    return;
                }
               
        }
        //Sets text from fields to array
        date = txtDate.getText();
        year = txtYear.getText();
        sClass = txtClass.getText();
        student1 = txtStudent1.getText();
        student2 = txtStudent2.getText();
        student3 = txtStudent3.getText();
        student4 = txtStudent4.getText();
        student5 = txtStudent5.getText();
        student6 = txtStudent6.getText();
        //makes new instance
        a = new Attendance (date, sClass, year, student1, student2, student3, student4, student5, student6);

        JOptionPane.showMessageDialog(null, "Successfully added attendance to database.", "Congratulations", JOptionPane.PLAIN_MESSAGE);
        
        att[count] = a;
        count++; 
        //Clears text
        txtDate.setText("");
        txtClass.setText("");
        txtYear.setText("");
        txtStudent1.setText("");
        txtStudent2.setText("");
        txtStudent3.setText("");
        txtStudent4.setText("");
        txtStudent5.setText("");
        txtStudent6.setText("");
            
    }//GEN-LAST:event_btnSaveActionPerformed

//MouseClick-Display     
    private void btnDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayActionPerformed
    //Displays all atttendance to user  
        String date, year, sClass, student1, student2, student3, student4, student5, student6;
        Attendance a;    
        //if no user have been saved
        if(count == 0){  
            JOptionPane.showMessageDialog(null, "Ther are no users saved yet.", "Attention!", JOptionPane.WARNING_MESSAGE);
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
        } 
        //Displays all attendance 
        for (int i=0; i < count; i++){   
            a = att[i];
            date = a.getDate();
            year =a.getYear();
            sClass =a.getsClass();
            student1 =a.getStudent1();
            student2 =a.getStudent2();
            student3 =a.getStudent3();
            student4 =a.getStudent4();
            student5 =a.getStudent5();
            student6 =a.getStudent6();
            JOptionPane.showMessageDialog(null, "Date: "+date+"\nYear: "+year+"\nClass: "+sClass+"\nStudents present: \n"+student1+"\n"+student2+"\n"+student3+"\n"+student4+"\n"+student5+"\n"+student6, "Attendance", JOptionPane.PLAIN_MESSAGE);            
            //Clears text fields
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
            txtStudent1.setText("");
            txtStudent2.setText("");
            txtStudent3.setText("");
            txtStudent4.setText("");
            txtStudent5.setText("");
            txtStudent6.setText("");
        }
        //Clears text fields
        txtDate.setText("");
        txtClass.setText("");
        txtYear.setText("");
        txtStudent1.setText("");
        txtStudent2.setText("");
        txtStudent3.setText("");
        txtStudent4.setText("");
        txtStudent5.setText("");
        txtStudent6.setText("");
        
    }//GEN-LAST:event_btnDisplayActionPerformed

//MouseClick-Search    
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
    /*
     *Searches for matches in array and displays match to user.
     *Gives option to exit or edit on Joption pane.
     *On selecting edit the searched user is deleted and details set in text fields ready to edit. 
     *All buttons are hidden bar "finish Edit" which saves the edited user back to the array.
     */        
        String date, year, sClass, student1, student2, student3, student4, student5, student6;
        Attendance a; 
        //Sets text from fields to array
        date = txtDate.getText();
        year = txtYear.getText();
        sClass = txtClass.getText();
        student1 = txtStudent1.getText();
        student2 = txtStudent2.getText();
        student3 = txtStudent3.getText();
        student4 = txtStudent4.getText();
        student5 = txtStudent5.getText();
        student6 = txtStudent6.getText();           
        //If there are no attendance in array
        if(count == 0) {   
            JOptionPane.showMessageDialog(null, "Nothing to show");
            return;
        }
        //If no information is entered
        else if(txtDate.getText().isEmpty() && txtYear.getText().isEmpty() && txtClass.getText().isEmpty()) {           
            JOptionPane.showMessageDialog(null, "You have not entered any information", "Attention!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        //If any information is missing 
        else if(txtDate.getText().isEmpty() || txtYear.getText().isEmpty() || txtClass.getText().isEmpty()) {
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
            txtStudent1.setText("");
            txtStudent2.setText("");
            txtStudent3.setText("");
            txtStudent4.setText("");
            txtStudent5.setText("");
            txtStudent6.setText("");
            JOptionPane.showMessageDialog(null, "You need enter at least the Date, Year, Class to search", "Attention!", JOptionPane.WARNING_MESSAGE);
            return;
        }  
        //Finds match 
        for (int i=0; i < count; i++){ 
            a = att[i];
            if (date.equals(a.getDate()) && sClass.equals(a.getsClass()) && year.equals(a.getYear()) && student1.equals(a.getStudent1()) && student2.equals(a.getStudent2()) && student3.equals(a.getStudent3()) && student4.equals(a.getStudent4()) && student5.equals(a.getStudent5()) && student6.equals(a.getStudent6())){
                date = a.getDate();
                year = a.getYear();
                sClass = a.getsClass();
                student1 = a.getStudent1();
                student2 = a.getStudent2();
                student3 = a.getStudent3();
                student4 = a.getStudent4();
                student5 = a.getStudent5();
                student6 = a.getStudent6();
                
                /*
                 *yes/no buttons custom text code modified from:
                 * http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html  
                 */
                
                // displays result, gives ok or edit option
                Object[] options = {"Edit","ok"};
                int reply = JOptionPane.showOptionDialog(null,"Date: "+date+"\nYear: "+year+"\nClass: "+sClass+"\nStudents present: "+student1+student2+student3+student4+student5+student6,"Search results",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[0]);
                //If edit is selected then search results populate the text fields
                if(reply == JOptionPane.YES_OPTION) {
                    txtDate.setText(date);
                    txtClass.setText(sClass);
                    txtYear.setText(year);
                    txtStudent1.setText(student1);
                    txtStudent2.setText(student2);
                    txtStudent3.setText(student3);
                    txtStudent4.setText(student4);
                    txtStudent5.setText(student5);
                    txtStudent6.setText(student6);
                    //removes matched result from database
                    for (int j=0; j < count; j++){ 
                    a = att[j];
                        if (date.equals(a.getDate()) && sClass.equals(a.getsClass()) && year.equals(a.getYear()) && student1.equals(a.getStudent1()) && student2.equals(a.getStudent2()) && student3.equals(a.getStudent3()) && student4.equals(a.getStudent4()) && student5.equals(a.getStudent5()) && student6.equals(a.getStudent6())){                 
                            att[j] = att[count-1];
                            att[count-1] = null;
                            count--;           
                        }               
                    }  
                    //shows edit button hides others
                    btnFinishEdit.setVisible(true);
                    btnRemove.setVisible(false);
                    btnDisplay.setVisible(false);
                    btnSearch.setVisible(false);
                    btnSave.setVisible(false);
                    btnBack.setVisible(false);
                    return;
                }
                //ok is selected, clears text and returns
                if(reply == JOptionPane.NO_OPTION) { 
                    txtDate.setText("");
                    txtClass.setText("");
                    txtYear.setText("");
                    txtStudent1.setText("");
                    txtStudent2.setText("");
                    txtStudent3.setText("");
                    txtStudent4.setText("");
                    txtStudent5.setText("");
                    txtStudent6.setText("");
                    return;
                } 
            }
            else{
                JOptionPane.showMessageDialog(null, "No such user", "Attention!", JOptionPane.WARNING_MESSAGE); 
                txtDate.setText("");
                txtClass.setText("");
                txtYear.setText("");
                txtStudent1.setText("");
                txtStudent2.setText("");
                txtStudent3.setText("");
                txtStudent4.setText("");
                txtStudent5.setText("");
                txtStudent6.setText("");   
            }
        } 
        //Clears text
        txtDate.setText("");
        txtClass.setText("");
        txtYear.setText("");
        txtStudent1.setText("");
        txtStudent2.setText("");
        txtStudent3.setText("");
        txtStudent4.setText("");
        txtStudent5.setText("");
        txtStudent6.setText("");
        
    }//GEN-LAST:event_btnSearchActionPerformed

//MouseClick-Remove     
    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
    //deletes user from array, gives users a Yes/No option  
        String date, year, sClass, student1, student2, student3, student4, student5, student6;
        Attendance a; 
        //Sets text from fields to array
        date = txtDate.getText();
        year = txtYear.getText();
        sClass = txtClass.getText();
        student1 = txtStudent1.getText();
        student2 = txtStudent2.getText();
        student3 = txtStudent3.getText();
        student4 = txtStudent4.getText();
        student5 = txtStudent5.getText();
        student6 = txtStudent6.getText(); 
        //If no information is entered to text fields 
        if(date.isEmpty() && sClass.isEmpty() && year.isEmpty()){              
            JOptionPane.showMessageDialog(null, "You have not entered any information.", "Attention!", JOptionPane.WARNING_MESSAGE); 
            return;
        }
        //If only part information is entered to text fields 
        else if(txtDate.getText().isEmpty() || txtClass.getText().isEmpty() || txtYear.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "You need to fill all fields to remove a user.", "Attention!", JOptionPane.WARNING_MESSAGE); 
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");  
            return;
        }  
       
        /*
         *code modified from http://stackoverflow.com/questions/8396870/joptionpane-yes-or-no-window
         */
       
        //Removes Attendance
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this user?", "Delete user", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "User Removed from database", "Attention!", JOptionPane.WARNING_MESSAGE); 
            for (int i=0; i < count; i++){ 
                a = att[i];
                if (date.equals(a.getDate()) && sClass.equals(a.getsClass()) && year.equals(a.getYear()) && student1.equals(a.getStudent1()) && student2.equals(a.getStudent2()) && student3.equals(a.getStudent3()) && student4.equals(a.getStudent4()) && student5.equals(a.getStudent5()) && student6.equals(a.getStudent6())){                 
                    att[i] = att[count-1];
                    att[count-1] = null;
                    count--;           
                }               
            } 
            //Clears text
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
            txtStudent1.setText("");
            txtStudent2.setText("");
            txtStudent3.setText("");
            txtStudent4.setText("");
            txtStudent5.setText("");
            txtStudent6.setText("");
        }
        //Clears text
        else{
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
            txtStudent1.setText("");
            txtStudent2.setText("");
            txtStudent3.setText("");
            txtStudent4.setText("");
            txtStudent5.setText("");
            txtStudent6.setText("");
        }
             
    }//GEN-LAST:event_btnRemoveActionPerformed

//MouseClick-Finish Edit    
    private void btnFinishEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishEditActionPerformed
    //Adds newly edited attendance to array  
        String date, year, sClass, student1, student2, student3, student4, student5, student6;
        Attendance a;
        //If all text fields are empty
        if(txtDate.getText().isEmpty() && txtYear.getText().isEmpty() && txtClass.getText().isEmpty() && txtStudent1.getText().isEmpty() && txtStudent2.getText().isEmpty() && txtStudent3.getText().isEmpty() && txtStudent4.getText().isEmpty() && txtStudent5.getText().isEmpty() && txtStudent6.getText().isEmpty()) {           
            JOptionPane.showMessageDialog(null, "You have not entered any information", "Attention!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        //If fields are part filled
        else if(txtDate.getText().isEmpty() || txtYear.getText().isEmpty() || txtClass.getText().isEmpty()) {
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
            txtStudent1.setText("");
            txtStudent2.setText("");
            txtStudent3.setText("");
            txtStudent4.setText("");
            txtStudent5.setText("");
            txtStudent6.setText("");
            JOptionPane.showMessageDialog(null, "You need enter at least the Date, Year and Class for attendance to be recorded", "Attention!", JOptionPane.WARNING_MESSAGE);
            return;
        } 
        //saves new edited user to array
        date = txtDate.getText();
        year = txtYear.getText();
        sClass = txtClass.getText();
        student1 = txtStudent1.getText();
        student2 = txtStudent2.getText();
        student3 = txtStudent3.getText();
        student4 = txtStudent4.getText();
        student5 = txtStudent5.getText();
        student6 = txtStudent6.getText();
        //makes new instance
        a = new Attendance (date, sClass, year, student1, student2, student3, student4, student5, student6);

        JOptionPane.showMessageDialog(null, "Attendance for "+date+" has been updated.", "Congratulations", JOptionPane.PLAIN_MESSAGE);
        
        att[count] = a;
        count++; 
        //clears text fields
        txtDate.setText("");
        txtClass.setText("");
        txtYear.setText("");
        txtStudent1.setText("");
        txtStudent2.setText("");
        txtStudent3.setText("");
        txtStudent4.setText("");
        txtStudent5.setText("");
        txtStudent6.setText("");
        //Changes visability of other options back
        btnFinishEdit.setVisible(false);
        btnRemove.setVisible(true);
        btnDisplay.setVisible(true);
        btnSearch.setVisible(true);
        btnSave.setVisible(true);
        btnBack.setVisible(true);
        
    }//GEN-LAST:event_btnFinishEditActionPerformed

//Keypress-Enter-Remove   
    private void btnRemoveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRemoveKeyPressed
    //deletes user from array     
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){  
            String date, year, sClass, student1, student2, student3, student4, student5, student6;
            Attendance a; 
            //Sets text from fields to array
            date = txtDate.getText();
            year = txtYear.getText();
            sClass = txtClass.getText();
            student1 = txtStudent1.getText();
            student2 = txtStudent2.getText();
            student3 = txtStudent3.getText();
            student4 = txtStudent4.getText();
            student5 = txtStudent5.getText();
            student6 = txtStudent6.getText(); 
            //If no information is entered to text fields 
            if(date.isEmpty() && sClass.isEmpty() && year.isEmpty()){              
                JOptionPane.showMessageDialog(null, "You have not entered any information.", "Attention!", JOptionPane.WARNING_MESSAGE); 
                return;
            }
            //If only part information is entered to text fields 
            else if(txtDate.getText().isEmpty() || txtClass.getText().isEmpty() || txtYear.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "You need to fill all fields to remove a user.", "Attention!", JOptionPane.WARNING_MESSAGE); 
                txtDate.setText("");
                txtClass.setText("");
                txtYear.setText("");  
                return;
            }  

            /*
             *code modified from http://stackoverflow.com/questions/8396870/joptionpane-yes-or-no-window
             */

            //Removes Attendance
            int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this user?", "Delete user", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(null, "User Removed from database", "Attention!", JOptionPane.WARNING_MESSAGE); 
                for (int i=0; i < count; i++){ 
                    a = att[i];
                    if (date.equals(a.getDate()) && sClass.equals(a.getsClass()) && year.equals(a.getYear()) && student1.equals(a.getStudent1()) && student2.equals(a.getStudent2()) && student3.equals(a.getStudent3()) && student4.equals(a.getStudent4()) && student5.equals(a.getStudent5()) && student6.equals(a.getStudent6())){                 
                        att[i] = att[count-1];
                        att[count-1] = null;
                        count--;           
                    }               
                } 
                //Clears text
                txtDate.setText("");
                txtClass.setText("");
                txtYear.setText("");
                txtStudent1.setText("");
                txtStudent2.setText("");
                txtStudent3.setText("");
                txtStudent4.setText("");
                txtStudent5.setText("");
                txtStudent6.setText("");
            }
            //Clears text
            else{
                txtDate.setText("");
                txtClass.setText("");
                txtYear.setText("");
                txtStudent1.setText("");
                txtStudent2.setText("");
                txtStudent3.setText("");
                txtStudent4.setText("");
                txtStudent5.setText("");
                txtStudent6.setText("");
            }    
        }
        
    }//GEN-LAST:event_btnRemoveKeyPressed

//Keypress-Enter-Search     
    private void btnSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSearchKeyPressed
    /*
     *Searches for matches in array and displays match to user.
     *Gives option to exit or edit.
     *On edit the searched user is deleted and details left in text fields to edit. 
     *All buttons are hidden bar "finish Edit" which save the edited user back to the array.
     */   
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){        
            String date, year, sClass, student1, student2, student3, student4, student5, student6;
            Attendance a; 
            //Sets text from fields to array
            date = txtDate.getText();
            year = txtYear.getText();
            sClass = txtClass.getText();
            student1 = txtStudent1.getText();
            student2 = txtStudent2.getText();
            student3 = txtStudent3.getText();
            student4 = txtStudent4.getText();
            student5 = txtStudent5.getText();
            student6 = txtStudent6.getText();           
            //If there are no attendance in array
            if(count == 0) {   
                JOptionPane.showMessageDialog(null, "Nothing to show");
                return;
            }
            //If no information is entered
            else if(txtDate.getText().isEmpty() && txtYear.getText().isEmpty() && txtClass.getText().isEmpty()) {           
                JOptionPane.showMessageDialog(null, "You have not entered any information", "Attention!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            //If any information is missing 
            else if(txtDate.getText().isEmpty() || txtYear.getText().isEmpty() || txtClass.getText().isEmpty()) {
                txtDate.setText("");
                txtClass.setText("");
                txtYear.setText("");
                txtStudent1.setText("");
                txtStudent2.setText("");
                txtStudent3.setText("");
                txtStudent4.setText("");
                txtStudent5.setText("");
                txtStudent6.setText("");
                JOptionPane.showMessageDialog(null, "You need enter at least the Date, Year, Class to search", "Attention!", JOptionPane.WARNING_MESSAGE);
                return;
            }  
            //Finds match 
            for (int i=0; i < count; i++){ 
                a = att[i];
                if (date.equals(a.getDate()) && sClass.equals(a.getsClass()) && year.equals(a.getYear()) && student1.equals(a.getStudent1()) && student2.equals(a.getStudent2()) && student3.equals(a.getStudent3()) && student4.equals(a.getStudent4()) && student5.equals(a.getStudent5()) && student6.equals(a.getStudent6())){
                    date = a.getDate();
                    year = a.getYear();
                    sClass = a.getsClass();
                    student1 = a.getStudent1();
                    student2 = a.getStudent2();
                    student3 = a.getStudent3();
                    student4 = a.getStudent4();
                    student5 = a.getStudent5();
                    student6 = a.getStudent6();

                    /*
                     *yes/no buttons custom text code modified from:
                     * http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html  
                     */

                    // displays result, gives ok or edit option
                    Object[] options = {"Edit","ok"};
                    int reply = JOptionPane.showOptionDialog(null,"Date: "+date+"\nYear: "+year+"\nClass: "+sClass+"\nStudents present: "+student1+student2+student3+student4+student5+student6,"Search results",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[0]);
                    //If edit is search results populate the text fiels
                    if(reply == JOptionPane.YES_OPTION) {
                        txtDate.setText(date);
                        txtClass.setText(sClass);
                        txtYear.setText(year);
                        txtStudent1.setText(student1);
                        txtStudent2.setText(student2);
                        txtStudent3.setText(student3);
                        txtStudent4.setText(student4);
                        txtStudent5.setText(student5);
                        txtStudent6.setText(student6);
                        //removes matched result from database
                        for (int j=0; j < count; j++){ 
                        a = att[j];
                            if (date.equals(a.getDate()) && sClass.equals(a.getsClass()) && year.equals(a.getYear()) && student1.equals(a.getStudent1()) && student2.equals(a.getStudent2()) && student3.equals(a.getStudent3()) && student4.equals(a.getStudent4()) && student5.equals(a.getStudent5()) && student6.equals(a.getStudent6())){                 
                                att[j] = att[count-1];
                                att[count-1] = null;
                                count--;           
                            }               
                        }  
                        //shows edit button hides others
                        btnFinishEdit.setVisible(true);
                        btnRemove.setVisible(false);
                        btnDisplay.setVisible(false);
                        btnSearch.setVisible(false);
                        btnSave.setVisible(false);
                        btnBack.setVisible(false);
                        return;
                    }
                    //ok is selected, clears text and returns
                    if(reply == JOptionPane.NO_OPTION) { 
                        txtDate.setText("");
                        txtClass.setText("");
                        txtYear.setText("");
                        txtStudent1.setText("");
                        txtStudent2.setText("");
                        txtStudent3.setText("");
                        txtStudent4.setText("");
                        txtStudent5.setText("");
                        txtStudent6.setText("");
                        return;
                    } 
                }
                else{
                    JOptionPane.showMessageDialog(null, "No such user", "Attention!", JOptionPane.WARNING_MESSAGE); 
                    txtDate.setText("");
                    txtClass.setText("");
                    txtYear.setText("");
                    txtStudent1.setText("");
                    txtStudent2.setText("");
                    txtStudent3.setText("");
                    txtStudent4.setText("");
                    txtStudent5.setText("");
                    txtStudent6.setText("");
                }
            } 
            //Clears text
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
            txtStudent1.setText("");
            txtStudent2.setText("");
            txtStudent3.setText("");
            txtStudent4.setText("");
            txtStudent5.setText("");
            txtStudent6.setText("");   
        }
        
    }//GEN-LAST:event_btnSearchKeyPressed

//Keypress-Enter-Display    
    private void btnDisplayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnDisplayKeyPressed
    //Displays all atttendance to user        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){ 
            String date, year, sClass, student1, student2, student3, student4, student5, student6;
            Attendance a;    
            //if no user have been saved
            if(count == 0){  
                JOptionPane.showMessageDialog(null, "Ther are no users saved yet.", "Attention!", JOptionPane.WARNING_MESSAGE);
                txtDate.setText("");
                txtClass.setText("");
                txtYear.setText("");
            } 
            //Displays all attendance 
            for (int i=0; i < count; i++){   
                a = att[i];
                date = a.getDate();
                year =a.getYear();
                sClass =a.getsClass();
                student1 =a.getStudent1();
                student2 =a.getStudent2();
                student3 =a.getStudent3();
                student4 =a.getStudent4();
                student5 =a.getStudent5();
                student6 =a.getStudent6();
                JOptionPane.showMessageDialog(null, "Date: "+date+"\nYear: "+year+"\nClass: "+sClass+"\nStudents present: \n"+student1+"\n"+student2+"\n"+student3+"\n"+student4+"\n"+student5+"\n"+student6, "Attendance", JOptionPane.PLAIN_MESSAGE);            
                //Clears text fields
                txtDate.setText("");
                txtClass.setText("");
                txtYear.setText("");
                txtStudent1.setText("");
                txtStudent2.setText("");
                txtStudent3.setText("");
                txtStudent4.setText("");
                txtStudent5.setText("");
                txtStudent6.setText("");
            }
            //Clears text fields
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
            txtStudent1.setText("");
            txtStudent2.setText("");
            txtStudent3.setText("");
            txtStudent4.setText("");
            txtStudent5.setText("");
            txtStudent6.setText("");  
        }
        
    }//GEN-LAST:event_btnDisplayKeyPressed

//Keypress-Enter-Back    
    private void btnBackKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBackKeyPressed
    //Navigates to Admin      
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){    
            LayoutManager layout = getParent().getLayout();
            if (layout instanceof CardLayout) {
                CardLayout cl = (CardLayout)layout;
                cl.show(getParent(), "ADMIN");
            }    
        }
        
    }//GEN-LAST:event_btnBackKeyPressed

//Keypress-Enter-Save     
    private void btnSaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSaveKeyPressed
    //Adds new attendance to array    
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){     
            String date, year, sClass, student1, student2, student3, student4, student5, student6;
            Attendance a;
            //If all text fields are empty
            if(txtDate.getText().isEmpty() && txtYear.getText().isEmpty() && txtClass.getText().isEmpty() && txtStudent1.getText().isEmpty() && txtStudent2.getText().isEmpty() && txtStudent3.getText().isEmpty() && txtStudent4.getText().isEmpty() && txtStudent5.getText().isEmpty() && txtStudent6.getText().isEmpty()) {           
                JOptionPane.showMessageDialog(null, "You have not entered any information", "Attention!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            //If fields are part filled
            else if(txtDate.getText().isEmpty() || txtYear.getText().isEmpty() || txtClass.getText().isEmpty()) {
                txtDate.setText("");
                txtClass.setText("");
                txtYear.setText("");
                txtStudent1.setText("");
                txtStudent2.setText("");
                txtStudent3.setText("");
                txtStudent4.setText("");
                txtStudent5.setText("");
                txtStudent6.setText("");
                JOptionPane.showMessageDialog(null, "You need enter at least the Date, Year and Class for attendance to be recorded", "Attention!", JOptionPane.WARNING_MESSAGE);
                return;
            } 
            //If date,class and year are entered but no students
            else if((txtDate.getText().length() > 0) && (txtYear.getText().length() > 0) && (txtClass.getText().length() > 0) && txtStudent1.getText().isEmpty() && txtStudent2.getText().isEmpty() && txtStudent3.getText().isEmpty() && txtStudent4.getText().isEmpty() && txtStudent5.getText().isEmpty() && txtStudent6.getText().isEmpty()) {
                int reply = JOptionPane.showConfirmDialog(null, "Are you sure? your have not entered any students, this will recored the attendance as 0", "Are you Sure?", JOptionPane.YES_NO_OPTION);
                    if (reply == JOptionPane.YES_OPTION) {
                        JOptionPane.showMessageDialog(null, "Successfully added attendance to database.", "Congratulations  !", JOptionPane.WARNING_MESSAGE);
                        //Sets text from fields to array
                        date = txtDate.getText();
                        year = txtYear.getText();
                        sClass = txtClass.getText();
                        student1 = txtStudent1.getText();
                        student2 = txtStudent2.getText();
                        student3 = txtStudent3.getText();
                        student4 = txtStudent4.getText();
                        student5 = txtStudent5.getText();
                        student6 = txtStudent6.getText();

                        a = new Attendance (date, sClass, year, student1, student2, student3, student4, student5, student6);


                        count++;

                        txtDate.setText("");
                        txtClass.setText("");
                        txtYear.setText("");
                        return;
                    }
                    if (reply == JOptionPane.NO_OPTION) {
                        txtDate.setText("");
                        txtClass.setText("");
                        txtYear.setText("");
                        return;
                    }

            }
            //Sets text from fields to array
            date = txtDate.getText();
            year = txtYear.getText();
            sClass = txtClass.getText();
            student1 = txtStudent1.getText();
            student2 = txtStudent2.getText();
            student3 = txtStudent3.getText();
            student4 = txtStudent4.getText();
            student5 = txtStudent5.getText();
            student6 = txtStudent6.getText();
            //makes new instance
            a = new Attendance (date, sClass, year, student1, student2, student3, student4, student5, student6);

            JOptionPane.showMessageDialog(null, "Successfully added attendance to database.", "Congratulations", JOptionPane.PLAIN_MESSAGE);

            att[count] = a;
            count++; 
            //Clears text
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
            txtStudent1.setText("");
            txtStudent2.setText("");
            txtStudent3.setText("");
            txtStudent4.setText("");
            txtStudent5.setText("");
            txtStudent6.setText("");  
        }
        
    }//GEN-LAST:event_btnSaveKeyPressed

//Keypress-Enter-FinishEdit     
    private void btnFinishEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnFinishEditKeyPressed
//Adds newly edited attendance to array        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String date, year, sClass, student1, student2, student3, student4, student5, student6;
            Attendance a;
            //If all text fields are empty
            if(txtDate.getText().isEmpty() && txtYear.getText().isEmpty() && txtClass.getText().isEmpty() && txtStudent1.getText().isEmpty() && txtStudent2.getText().isEmpty() && txtStudent3.getText().isEmpty() && txtStudent4.getText().isEmpty() && txtStudent5.getText().isEmpty() && txtStudent6.getText().isEmpty()) {           
                JOptionPane.showMessageDialog(null, "You have not entered any information", "Attention!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            //If fields are part filled
            else if(txtDate.getText().isEmpty() || txtYear.getText().isEmpty() || txtClass.getText().isEmpty()) {
                txtDate.setText("");
                txtClass.setText("");
                txtYear.setText("");
                txtStudent1.setText("");
                txtStudent2.setText("");
                txtStudent3.setText("");
                txtStudent4.setText("");
                txtStudent5.setText("");
                txtStudent6.setText("");
                JOptionPane.showMessageDialog(null, "You need enter at least the Date, Year and Class for attendance to be recorded", "Attention!", JOptionPane.WARNING_MESSAGE);
                return;
            } 
            //saves new edited user to array
            date = txtDate.getText();
            year = txtYear.getText();
            sClass = txtClass.getText();
            student1 = txtStudent1.getText();
            student2 = txtStudent2.getText();
            student3 = txtStudent3.getText();
            student4 = txtStudent4.getText();
            student5 = txtStudent5.getText();
            student6 = txtStudent6.getText();
            //makes new instance
            a = new Attendance (date, sClass, year, student1, student2, student3, student4, student5, student6);

            JOptionPane.showMessageDialog(null, "Attendance for "+date+" has been updated.", "Congratulations", JOptionPane.PLAIN_MESSAGE);

            att[count] = a;
            count++; 
            //clears text fields
            txtDate.setText("");
            txtClass.setText("");
            txtYear.setText("");
            txtStudent1.setText("");
            txtStudent2.setText("");
            txtStudent3.setText("");
            txtStudent4.setText("");
            txtStudent5.setText("");
            txtStudent6.setText("");
            //Changes visability of other options back
            btnFinishEdit.setVisible(false);
            btnRemove.setVisible(true);
            btnDisplay.setVisible(true);
            btnSearch.setVisible(true);
            btnSave.setVisible(true);
            btnBack.setVisible(true);

        }
        
    }//GEN-LAST:event_btnFinishEditKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDisplay;
    private javax.swing.JButton btnFinishEdit;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel lblAttendance;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblClass;
    private javax.swing.JLabel lblStudent;
    private javax.swing.JLabel lblYear;
    private javax.swing.JLabel lblYear1;
    private javax.swing.JTextField txtClass;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtStudent1;
    private javax.swing.JTextField txtStudent2;
    private javax.swing.JTextField txtStudent3;
    private javax.swing.JTextField txtStudent4;
    private javax.swing.JTextField txtStudent5;
    private javax.swing.JTextField txtStudent6;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
