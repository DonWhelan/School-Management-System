/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ie.SchoolManagmentSystem.GUI;

import java.awt.CardLayout;
import java.awt.LayoutManager;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;



/**
 * MainScreenPanel.java
 * @author D. Whelan
 * JPANEL for logging into app
 */
public class MainScreenPanel extends javax.swing.JPanel {
    
    private final String AdminUser;
    private final String AdminPassword;
    private final String StudentUser;
    private final String StudentPassword;  
    
    /**
     * Creates new form MainScreenPanel
     */
    public MainScreenPanel() {
        
        //Passwords and usernames were suppied in README in zipped folder submitted with the project
        AdminUser = "Teacher";
        AdminPassword = "TeacherPassword";
        StudentUser = "Student";
        StudentPassword = "StudentPassword";
        
        initComponents();
        
        btnExams.setVisible(false);
        btnCourseContent.setVisible(false);
        btnStudents.setVisible(false);
        btnAdmin.setVisible(false);
        btnLogOut.setVisible(false);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWelcomeToSchool = new javax.swing.JLabel();
        btnStudents = new javax.swing.JButton();
        btnAdmin = new javax.swing.JButton();
        lblUserName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnLogIn = new javax.swing.JButton();
        btnCourseContent = new javax.swing.JButton();
        btnExams = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(500, 700));
        setPreferredSize(new java.awt.Dimension(500, 700));
        setLayout(null);

        lblWelcomeToSchool.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblWelcomeToSchool.setForeground(new java.awt.Color(204, 204, 204));
        lblWelcomeToSchool.setText("Welcome to School");
        add(lblWelcomeToSchool);
        lblWelcomeToSchool.setBounds(130, 20, 250, 29);

        btnStudents.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnStudents.setText("Students");
        btnStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentsActionPerformed(evt);
            }
        });
        btnStudents.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnStudentsKeyPressed(evt);
            }
        });
        add(btnStudents);
        btnStudents.setBounds(100, 440, 303, 50);

        btnAdmin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAdmin.setText("Admin");
        btnAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminActionPerformed(evt);
            }
        });
        btnAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAdminKeyPressed(evt);
            }
        });
        add(btnAdmin);
        btnAdmin.setBounds(100, 530, 303, 50);

        lblUserName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(204, 204, 204));
        lblUserName.setText("Username:");
        add(lblUserName);
        lblUserName.setBounds(110, 100, 80, 17);

        lblPassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(204, 204, 204));
        lblPassword.setText("Password:");
        add(lblPassword);
        lblPassword.setBounds(110, 130, 80, 17);

        txtUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserNameKeyPressed(evt);
            }
        });
        add(txtUserName);
        txtUserName.setBounds(220, 90, 160, 28);

        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });
        add(txtPassword);
        txtPassword.setBounds(220, 130, 160, 28);

        btnLogIn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnLogIn.setText("Login");
        btnLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogInActionPerformed(evt);
            }
        });
        btnLogIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLogInKeyPressed(evt);
            }
        });
        add(btnLogIn);
        btnLogIn.setBounds(220, 170, 70, 23);

        btnCourseContent.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCourseContent.setText("Course Content");
        btnCourseContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCourseContentActionPerformed(evt);
            }
        });
        btnCourseContent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCourseContentKeyPressed(evt);
            }
        });
        add(btnCourseContent);
        btnCourseContent.setBounds(100, 350, 303, 50);

        btnExams.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExams.setText("Exams");
        btnExams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExamsActionPerformed(evt);
            }
        });
        btnExams.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnExamsKeyPressed(evt);
            }
        });
        add(btnExams);
        btnExams.setBounds(100, 260, 303, 50);

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        btnLogOut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLogOutKeyPressed(evt);
            }
        });
        add(btnLogOut);
        btnLogOut.setBounds(310, 170, 71, 23);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ie/SchoolManagmentSystem/GUI/ExamsAppBackground.png"))); // NOI18N
        lblBackground.setPreferredSize(new java.awt.Dimension(500, 700));
        add(lblBackground);
        lblBackground.setBounds(0, 0, 500, 700);
    }// </editor-fold>//GEN-END:initComponents

//MouseClick-Students     
    private void btnStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentsActionPerformed
    //Navigates to Students    
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout)layout;
            cl.show(getParent(), "STUDENT");
        }
       
    }//GEN-LAST:event_btnStudentsActionPerformed

//MouseClick-Admin     
    private void btnAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminActionPerformed
    //Navigates to Admin    
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout)layout;
            cl.show(getParent(), "ADMIN");
        }
        
    }//GEN-LAST:event_btnAdminActionPerformed

//MouseClick-LogIn  
    private void btnLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogInActionPerformed
    //Logs user in(through validatin), changes visablility of buttons depending on users details Admin/Student and clears text    
        
        //login Validation
        String User = txtUserName.getText();
        String Password = txtPassword.getText();
        //both fields empty
        if(User.isEmpty() && Password.isEmpty()){
            JOptionPane.showMessageDialog(null, "You have not entered any information", "Attention", JOptionPane.WARNING_MESSAGE);   
        }
        //User is empty
        else if(User.isEmpty()){
            JOptionPane.showMessageDialog(null, "You need to enter a User Name", "Attention", JOptionPane.WARNING_MESSAGE);   
        }
        //Password is empty
        else if(Password.isEmpty()){
            JOptionPane.showMessageDialog(null, "You need to enter a Password", "Attention", JOptionPane.WARNING_MESSAGE);   
        } 
        //Admins login
        else if(User.equals(AdminUser) && Password.equals(AdminPassword)){   
            btnExams.setVisible(true);
            btnCourseContent.setVisible(true);
            btnStudents.setVisible(true);
            btnAdmin.setVisible(true);
            btnLogOut.setVisible(true);
        }
        //Student Login
        else if(User.equals(StudentUser) && Password.equals(StudentPassword)){
            btnExams.setVisible(true);
            btnCourseContent.setVisible(true);
            btnStudents.setVisible(true);
            btnAdmin.setVisible(false);
            btnLogOut.setVisible(true);
        }
        //Incorrect password
        else if (User.equals(AdminUser) || User.equals(StudentUser)){
            JOptionPane.showMessageDialog(null, "Password is incorrect", "Attention", JOptionPane.WARNING_MESSAGE);   
        }
        //Incorrect Username
        else if (Password.equals(AdminPassword) || Password.equals(StudentPassword)){
            JOptionPane.showMessageDialog(null, "User name is incorrect", "Attention", JOptionPane.WARNING_MESSAGE);   
        }
        //Failed log in (catch)
        else{
            JOptionPane.showMessageDialog(null, "Login attempt failed", "Attention", JOptionPane.WARNING_MESSAGE);
        }
        //Removes text from both txt fields
        txtUserName.setText("");
        txtPassword.setText("");
                                                 
    }//GEN-LAST:event_btnLogInActionPerformed

//MouseClick-Exams    
    private void btnExamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExamsActionPerformed
    //Navigates to Exams 
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout)layout;
            cl.show(getParent(), "EXAMS");
        }
    }//GEN-LAST:event_btnExamsActionPerformed

//MouseClick-CourseContent   
    private void btnCourseContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCourseContentActionPerformed
    //Navigates to CourseContent
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout)layout;
            cl.show(getParent(), "COURSE CONTENT");
        }
    }//GEN-LAST:event_btnCourseContentActionPerformed

//MouseClick-LogOut    
    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
    //Hides menues and clears text after LogOut  
        btnExams.setVisible(false);
        btnCourseContent.setVisible(false);
        btnStudents.setVisible(false);
        btnAdmin.setVisible(false);
        btnLogOut.setVisible(false);
        //removes text from both txt fields after logOut
        txtUserName.setText("");
        txtPassword.setText("");       
    }//GEN-LAST:event_btnLogOutActionPerformed

//Keypress-Enter-txtUser(LogIn)
    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
    //Logs user in(through validatin), changes visablility of buttons depending on users details Admin/Student
        
        /*
         *Code modified from
         *http://stackoverflow.com/questions/4673350/detecting-when-user-presses-enter-in-java
         */
        
        //If ENTER on keyboard is pressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        
            // login Validation
            String User = txtUserName.getText();
            String Password = txtPassword.getText();
            //both fields empty
            if(User.isEmpty() && Password.isEmpty()){
                JOptionPane.showMessageDialog(null, "You have not entered any information", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //User is empty
            else if(User.isEmpty()){
                JOptionPane.showMessageDialog(null, "You need to enter a User Name", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //Password is empty
            else if(Password.isEmpty()){
                JOptionPane.showMessageDialog(null, "You need to enter a Password", "Attention", JOptionPane.WARNING_MESSAGE);   
            } 
            //Admins login
            else if(User.equals(AdminUser) && Password.equals(AdminPassword)){   
                btnExams.setVisible(true);
                btnCourseContent.setVisible(true);
                btnStudents.setVisible(true);
                btnAdmin.setVisible(true);
                btnLogOut.setVisible(true);
            }
            //Student Login
            else if(User.equals(StudentUser) && Password.equals(StudentPassword)){
                btnExams.setVisible(true);
                btnCourseContent.setVisible(true);
                btnStudents.setVisible(true);
                btnAdmin.setVisible(false);
                btnLogOut.setVisible(true);
            }
            //Incorrect password
            else if (User.equals(AdminUser) || User.equals(StudentUser)){
                JOptionPane.showMessageDialog(null, "Password is incorrect", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //Incorrect Username
            else if (Password.equals(AdminPassword) || Password.equals(StudentPassword)){
                JOptionPane.showMessageDialog(null, "User name is incorrect", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //Failed log in (catch)
            else{
                JOptionPane.showMessageDialog(null, "Login attempt failed", "Attention", JOptionPane.WARNING_MESSAGE);
            }
            //Removes text from both txt fields
            txtUserName.setText("");
            txtPassword.setText("");         
        }
    }//GEN-LAST:event_txtPasswordKeyPressed

//Keypress-Enter-txtUser(LogIn)
    private void txtUserNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserNameKeyPressed
    //Logs user in(through validatin), changes visablility of buttons depending on users details Admin/Student  
        
        /*
         *Code modified from
         *http://stackoverflow.com/questions/4673350/detecting-when-user-presses-enter-in-java
         */
        
        //If ENTER on keyboard is pressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        
            // login Validation
            String User = txtUserName.getText();
            String Password = txtPassword.getText();
            //both fields empty
            if(User.isEmpty() && Password.isEmpty()){
                JOptionPane.showMessageDialog(null, "You have not entered any information", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //User is empty
            else if(User.isEmpty()){
                JOptionPane.showMessageDialog(null, "You need to enter a User Name", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //Password is empty
            else if(Password.isEmpty()){
                JOptionPane.showMessageDialog(null, "You need to enter a Password", "Attention", JOptionPane.WARNING_MESSAGE);   
            } 
            //Admins login
            else if(User.equals(AdminUser) && Password.equals(AdminPassword)){   
                btnExams.setVisible(true);
                btnCourseContent.setVisible(true);
                btnStudents.setVisible(true);
                btnAdmin.setVisible(true);
                btnLogOut.setVisible(true);
            }
            //Student Login
            else if(User.equals(StudentUser) && Password.equals(StudentPassword)){
                btnExams.setVisible(true);
                btnCourseContent.setVisible(true);
                btnStudents.setVisible(true);
                btnAdmin.setVisible(false);
                btnLogOut.setVisible(true);
            }
            //Incorrect password
            else if (User.equals(AdminUser) || User.equals(StudentUser)){
                JOptionPane.showMessageDialog(null, "Password is incorrect", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //Incorrect Username
            else if (Password.equals(AdminPassword) || Password.equals(StudentPassword)){
                JOptionPane.showMessageDialog(null, "User name is incorrect", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //Failed log in (catch)
            else{
                JOptionPane.showMessageDialog(null, "Login attempt failed", "Attention", JOptionPane.WARNING_MESSAGE);
            }
            //Removes text from both txt fields
            txtUserName.setText("");
            txtPassword.setText("");         
        }
    }//GEN-LAST:event_txtUserNameKeyPressed

//Keypress-Enter-LogIn      
    private void btnLogInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLogInKeyPressed
    //Logs user in(through validatin), changes visablility of buttons depending on users details Admin/Student and clears text
        
        /*
         *Code modified from
         *http://stackoverflow.com/questions/4673350/detecting-when-user-presses-enter-in-java
         */
        
        //If ENTER on keyboard is pressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        
            // login Validation
            String User = txtUserName.getText();
            String Password = txtPassword.getText();
            //both fields empty
            if(User.isEmpty() && Password.isEmpty()){
                JOptionPane.showMessageDialog(null, "You have not entered any information", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //User is empty
            else if(User.isEmpty()){
                JOptionPane.showMessageDialog(null, "You need to enter a User Name", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //Password is empty
            else if(Password.isEmpty()){
                JOptionPane.showMessageDialog(null, "You need to enter a Password", "Attention", JOptionPane.WARNING_MESSAGE);   
            } 
            //Admins login
            else if(User.equals(AdminUser) && Password.equals(AdminPassword)){   
                btnExams.setVisible(true);
                btnCourseContent.setVisible(true);
                btnStudents.setVisible(true);
                btnAdmin.setVisible(true);
                btnLogOut.setVisible(true);
            }
            //Student Login
            else if(User.equals(StudentUser) && Password.equals(StudentPassword)){
                btnExams.setVisible(true);
                btnCourseContent.setVisible(true);
                btnStudents.setVisible(true);
                btnAdmin.setVisible(false);
                btnLogOut.setVisible(true);
            }
            //Incorrect password
            else if (User.equals(AdminUser) || User.equals(StudentUser)){
                JOptionPane.showMessageDialog(null, "Password is incorrect", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //Incorrect Username
            else if (Password.equals(AdminPassword) || Password.equals(StudentPassword)){
                JOptionPane.showMessageDialog(null, "User name is incorrect", "Attention", JOptionPane.WARNING_MESSAGE);   
            }
            //Failed log in (catch)
            else{
                JOptionPane.showMessageDialog(null, "Login attempt failed", "Attention", JOptionPane.WARNING_MESSAGE);
            }
            //Removes text from both txt fields
            txtUserName.setText("");
            txtPassword.setText("");         
        }
    }//GEN-LAST:event_btnLogInKeyPressed

//Keypress-Enter-LogOut   
    private void btnLogOutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLogOutKeyPressed
    //Hides menues and clears text after LogOut     
        
        /*
         *Code modified from
         *http://stackoverflow.com/questions/4673350/detecting-when-user-presses-enter-in-java
         */
        
        //If ENTER on keyboard is pressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnExams.setVisible(false);
            btnCourseContent.setVisible(false);
            btnStudents.setVisible(false);
            btnAdmin.setVisible(false);
            btnLogOut.setVisible(false);
            //removes text from both txt fields after logOut
            txtUserName.setText("");
            txtPassword.setText("");             
        }
    }//GEN-LAST:event_btnLogOutKeyPressed

//Keypress-Enter-Exams      
    private void btnExamsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnExamsKeyPressed
    //Navigates to Exams    
        /*
         *Code modified from
         *http://stackoverflow.com/questions/4673350/detecting-when-user-presses-enter-in-java
         */
        
        //If ENTER on keyboard is pressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            LayoutManager layout = getParent().getLayout();
            if (layout instanceof CardLayout) {
                CardLayout cl = (CardLayout)layout;
                cl.show(getParent(), "EXAMS");
            }    
        }
    }//GEN-LAST:event_btnExamsKeyPressed

//Keypress-Enter-CourseContent      
    private void btnCourseContentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCourseContentKeyPressed
    //Navigates to CourseContent    
        /*
         *Code modified from
         *http://stackoverflow.com/questions/4673350/detecting-when-user-presses-enter-in-java
         */
        
        //If ENTER on keyboard is pressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            LayoutManager layout = getParent().getLayout();
            if (layout instanceof CardLayout) {
                CardLayout cl = (CardLayout)layout;
                cl.show(getParent(), "COURSE CONTENT");
            }    
        }
    }//GEN-LAST:event_btnCourseContentKeyPressed

//Keypress-Enter-Students     
    private void btnStudentsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnStudentsKeyPressed
    //Navigates to Students  
        /*
         *Code modified from
         *http://stackoverflow.com/questions/4673350/detecting-when-user-presses-enter-in-java
         */
        
        //If ENTER on keyboard is pressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            LayoutManager layout = getParent().getLayout();
            if (layout instanceof CardLayout) {
                CardLayout cl = (CardLayout)layout;
                cl.show(getParent(), "STUDENTS");
            }      
        }
        
    }//GEN-LAST:event_btnStudentsKeyPressed

//Keypress-Enter-Admin    
    private void btnAdminKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAdminKeyPressed
    //Navigates to Admin
        /*
         *Code modified from
         *http://stackoverflow.com/questions/4673350/detecting-when-user-presses-enter-in-java
         */
        
        //If ENTER on keyboard is pressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            LayoutManager layout = getParent().getLayout();
            if (layout instanceof CardLayout) {
                CardLayout cl = (CardLayout)layout;
                cl.show(getParent(), "ADMIN");
            }    
        }
    }//GEN-LAST:event_btnAdminKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdmin;
    private javax.swing.JButton btnCourseContent;
    private javax.swing.JButton btnExams;
    private javax.swing.JButton btnLogIn;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnStudents;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblWelcomeToSchool;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
